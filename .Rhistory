nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
promedioDias = 0
x <- cantidadPorProductos$n[nroProductos]
promedioDias = acum / 2
print(promedioDias)
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
li[[i]]<- acum
}
nroProductos = nroProductos + 1
}
{
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
promedioDias = 0
x <- cantidadPorProductos$n[nroProductos]
promedioDias = acum / 2
print(promedioDias)
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
paste0(acum,collapse = NULL)
}
nroProductos = nroProductos + 1
}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
promedioDias = 0
x <- cantidadPorProductos$n[nroProductos]
promedioDias = acum / 2
print(promedioDias)
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
li<-paste0(acum,collapse = NULL)
}
nroProductos = nroProductos + 1
}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
promedioDias = 0
x <- cantidadPorProductos$n[nroProductos]
promedioDias = acum / 2
print(promedioDias)
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
li<-paste0(acum,collapse = NULL)
}
nroProductos = nroProductos + 1
}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
promedioDias = 0
x <- cantidadPorProductos$n[nroProductos]
promedioDias = acum / 2
print(promedioDias)
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
d1 <- data.frame(y1 = acum)
}
nroProductos = nroProductos + 1
}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
promedioDias = 0
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
d1 <- data.frame(y1 = acum)
}
nroProductos = nroProductos + 1
}
}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
d1 <- data.frame(y1 = acum)
}
nroProductos = nroProductos + 1}
}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
d1 <- data.frame(y1 = acum)
}
nroProductos = nroProductos + 1}
}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
d1 <- data.frame(y1 = acum)
}
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
d1 <- data.frame(y1 = acum,y2=acum)
}
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
d1 <- data.frame(y1 = acum,y2=acum, y3=acum)
}
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
}
d1 <- data.frame(y1 = acum,y2=acum, y3=acum)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
}
nroProductos = nroProductos + 1}
}
#install.packages("rjason")
library(rjson)
library(dplyr)
library(tidyr)
library(date)
#setwd("C:.../Proyectos/compras") Set working directory
#Se lee el archivo .json:
comprasJson <- fromJSON("archivoCompras.json")
#Se convierte a data frame:
comprasDF <- comprasJson[["customer"]]$purchases%>% as.data.frame()
#Transformar columna de fechas de char a date
comprasDF$date = as.Date(comprasDF$date)
#Aplanar lista de compras para acceder a los datos
fechaySkuProducto <- (unnest_legacy(comprasDF) %>% select(date, sku))
#Obtener la cantidad de veces que se repiten los productos
#Se filtra los que se repiten al menos dos veces
cantidadPorProductos <- (unnest_legacy(comprasDF) %>%
select(date, sku) %>%
count(sku) %>%
filter(n>1))
#Se obtiene un JOIN entre los DF por el "sku" del producto
productosRepetidos <- merge(fechaySkuProducto,cantidadPorProductos,by="sku")
#Se separan los productos segun tengan el mismo "sku"
productosSeparados <- split(productosRepetidos, f = productosRepetidos$sku)
#La lista anterior contiene DataFrames
#Se envia al GlobalEnvironment los DF por separado
#list2env(productosSeparadosSku, .GlobalEnv)
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
}
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(acum)
print(nroProductos)
}
print(acum)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
print(nroProductos)
}
print(acum)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum)
print(nroProductos)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/nroProductos)
print(nroProductos)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
li<-as.list(as.list(acum))
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/x)
print(nroProductos)
nroProductos = nroProductos + 1}
#install.packages("rjason")
library(rjson)
library(dplyr)
library(tidyr)
library(date)
#setwd("C:.../Proyectos/compras") Set working directory
#Se lee el archivo .json:
comprasJson <- fromJSON("archivoCompras.json")
#Se convierte a data frame:
comprasDF <- comprasJson[["customer"]]$purchases%>% as.data.frame()
#Transformar columna de fechas de char a date
comprasDF$date = as.Date(comprasDF$date)
#Aplanar lista de compras para acceder a los datos
fechaySkuProducto <- (unnest_legacy(comprasDF) %>% select(date, sku))
#Obtener la cantidad de veces que se repiten los productos
#Se filtra los que se repiten al menos dos veces
cantidadPorProductos <- (unnest_legacy(comprasDF) %>%
select(date, sku) %>%
count(sku) %>%
filter(n>1))
#Se obtiene un JOIN entre los DF por el "sku" del producto
productosRepetidos <- merge(fechaySkuProducto,cantidadPorProductos,by="sku")
#Se separan los productos segun tengan el mismo "sku"
productosSeparados <- split(productosRepetidos, f = productosRepetidos$sku)
#La lista anterior contiene DataFrames
#Se envia al GlobalEnvironment los DF por separado
#list2env(productosSeparadosSku, .GlobalEnv)
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x <- cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/x)
print(nroProductos)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/x)
print(nroProductos)
nroProductos = nroProductos + 1}
cantidadPorProductos$n[nroProductos]
cantidadPorProductos$n[1]
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print(nroProductos)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print("Primer",nroProductos)
nroProductos = nroProductos + 1}
print(nroProductos)
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print(nroProductos)
nroProductos = nroProductos + 1}
View(productosRepetidos)
View(productosSeparados)
View(productosRepetidos)
View(productosSeparados)
productosSeparados[[nroProductos]]$date[1]
productosSeparados[[nroProductos]]$date[1]
productosSeparados[[1]]$date[3]
productosSeparados[[2]]$date[2]
View(productosSeparados)
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print(productosSeparados[[x]]$date[i])
print(nroProductos)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print(productosSeparados[[x]])
print(nroProductos)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print(productosSeparados[[nroProductos]])
print(nroProductos)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print(nroProductos)
print(productosSeparados[[nroProductos]])
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(acum/(x-1))
print(nroProductos)
print(productosSeparados[[nroProductos]])
print(productosSeparados[[nroProductos]]$date[x])
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
promedioFechas = acum/(x-1)
print(promedioFechas)
print(nroProductos)
print(productosSeparados[[nroProductos]])
fechaRecompra <- productosSeparados[[nroProductos]]$date[x] + promedioFechas
print(fechaRecompra)
nroProductos = nroProductos + 1}
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(nroProductos)
promedioFechas = acum/(x-1)
print(promedioFechas)
print(productosSeparados[[nroProductos]])
fechaRecompra <- productosSeparados[[nroProductos]]$date[x] + promedioFechas
print(fechaRecompra)
nroProductos = nroProductos + 1}
calcularFechaRecompra()
calcularFechaRecompra <- function(){
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(nroProductos)
promedioFechas = acum/(x-1)
print(promedioFechas)
print(productosSeparados[[nroProductos]])
fechaRecompra <- productosSeparados[[nroProductos]]$date[x] + promedioFechas
print(fechaRecompra)
nroProductos = nroProductos + 1}
}
calcularFechaRecompra()
calcularFechaRecompra <- function(){
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(nroProductos)
promedioFechas = acum/(x-1)
print(promedioFechas)
print(productosSeparados[[nroProductos]])
fechaRecompra <- productosSeparados[[nroProductos]]$date[x] + promedioFechas
print("Fecha de recompra")
print(fechaRecompra)
nroProductos = nroProductos + 1}
}
calcularFechaRecompra()
calcularFechaRecompra <- function(){
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(nroProductos)
promedioFechas = acum/(x-1)
print(promedioFechas)
print(productosSeparados[[nroProductos]])
fechaRecompra <- productosSeparados[[nroProductos]]$date[x] + promedioFechas
print("Fecha de recompra")
print(fechaRecompra)
print("")
nroProductos = nroProductos + 1}
}
calcularFechaRecompra()
print("""")
calcularFechaRecompra <- function(){
nroProductos= 1
while (nroProductos <= (length(productosSeparados))){
acum = 0
x = cantidadPorProductos$n[nroProductos]
for (i in 2:x){
acum =  acum  + (productosSeparados[[nroProductos]]$date[i] - productosSeparados[[nroProductos]]$date[i-1])
}
print(nroProductos)
promedioFechas = acum/(x-1)
print(promedioFechas)
print(productosSeparados[[nroProductos]])
fechaRecompra <- productosSeparados[[nroProductos]]$date[x] + promedioFechas
print("Fecha de recompra")
print(fechaRecompra)
print("""")
nroProductos = nroProductos + 1}
}
calcularFechaRecompra()
save.image("C:/Users/cecilia/Desktop/Proyectos/compras/GlobalCompras.RData")
